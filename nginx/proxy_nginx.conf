
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen 7000;
        server_name localhost;

        #server certificate
        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        # CA certificate
        ssl_client_certificate /etc/nginx/certs/ca.crt

        #verify client certificate
        #aka validate who the client is that is accessing upstream server
        ssl_verify_client optional;

        location / {
            if ($ssl_client_verify != SUCCESS) {
                return 403;
            }
            # set headers for client and fowarding IP
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # set header for whether client verified or not
            proxy_set_header Verified $ssl_client_verify;

            # set header for subject DN (distinguished name) string of client certificate
            proxy_set_header DN $ssl_client_s_dn;

            proxy_pass http://server:8000;
        }
    }

    include servers/*;
}
